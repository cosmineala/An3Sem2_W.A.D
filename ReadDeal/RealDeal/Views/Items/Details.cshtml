@model RealDeal.AppLogic.Models.Item

@using Microsoft.AspNetCore.Identity;
@using RealDeal.AppLogic.Services;
@inject UserManager<IdentityUser> identityServices;
@inject UserService userService;

@{
    ViewData["Title"] = "Details";
}

    <meta http-equiv="refresh" content="5">

@{
    int state = 0 ;
    if (Model.AuctionDate > DateTime.Now)
    {
        state = 0;
        <h1>State: Waiting</h1>
    }
    if (Model.AuctionDate <= DateTime.Now && Model.AuctionDeadline >= DateTime.Now)
    {
        state = 1;
        <h1>State: Biding</h1>
    }
    if (Model.AuctionDeadline < DateTime.Now)
    {
        state = 2;
        <h1>State: Done</h1>
    }

    TimeSpan? timeSpan = Model.AuctionDeadline - DateTime.Now;
    //String timeString = timeSpan.ToString();
    String remaningTime = "Days:" + timeSpan.Value.Days.ToString() + " Time:" + timeSpan.Value.Hours.ToString()+ ":" + timeSpan.Value.Minutes.ToString() + ":" + timeSpan.Value.Seconds.ToString();
}




<div>
    <h4>Item</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            Curent Price:
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.StartPrice)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.AuctionDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.AuctionDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.AuctionDeadline)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.AuctionDeadline)
        </dd>

        <dt class="col-sm-2">
            Teamanig time
        </dt>
        <dd class="col-sm-10">
            @Html.Encode( remaningTime );
        </dd>

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Tag)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Tag)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Owner)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Owner.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Buyer)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Buyer.Name)
        </dd>
    </dl>
</div>

    @{var user = userService.GetUserFromIdentity(identityServices.GetUserId(User));}
    @if (Model.OwnerID == user.ID && state == 0)
    {

        <a asp-action="Edit" asp-route-id="@Model.ID">Edit</a>

    }
    @if (Model.OwnerID != user.ID && state == 1)
    {
        <div class="row">
            <form asp-action="Details">
                <div class="form-group">
                    Your offer:
                    @*<label asp-for="StartPrice" class="control-label"></label>*@
                    <input asp-for="StartPrice" class="form-control" />
                    <span asp-validation-for="StartPrice" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Bid" class="btn btn-primary" />
                </div>
            </form>
        </div>

                    }

                    <a asp-controller="Details" asp-action="Index">Back to List</a>
            </div>
